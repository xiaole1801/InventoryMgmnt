/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.imageio.ImageIO;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

import db.HibernateUtil;
import init.main;
import models.ISle;
import models.ISleUserView;
import models.InvInfo;
import models.Storage;
import models.User;
import ui.model.ButtonColumn;
import util.Label;
import util.PrintImage;

/**
 *
 * @author zhangle
 */
public class AddBatchInvForm extends javax.swing.JFrame {

    /**
     * Creates new form AddBatchInvForm
     */
    public AddBatchInvForm() {
        initComponents();
        
        checkinTimePicker.setFormats("yyyy-MM-dd");
        checkinTimePicker.setDate(new Date());
        
        
        List<User> userlist = main.client.getUserInfo();
        for (User user : userlist) {
          creatorMap.put(user.getUserName   (),user.getUserID());
        }
        createEngComboBox.setModel(new DefaultComboBoxModel(creatorMap.keySet().toArray()));
        createEngComboBox.setSelectedItem(main.client.getUser());
        
        checkinEngComboBox.setModel(new DefaultComboBoxModel(creatorMap.keySet().toArray()));
        checkinEngComboBox.setSelectedItem(main.client.getUser());
        
        List<Storage> lockerList = main.client.getStorageInfo();
        for (Storage storage : lockerList) {
          lockerMap.put(storage.getStorageTag(), storage.getStorageID());
        }
        storageIDComboBox.setModel(new DefaultComboBoxModel(lockerMap.keySet().toArray()));
        
//        List<ISleUserView> isleList = main.client.getISleUserInfo();
//        for (ISleUserView isle : isleList) {
//          isleMap.put(isle.getISleID(), isle.getISleID());
//        }
//        isleIDComboBox.setModel(new DefaultComboBoxModel(isleMap.keySet().toArray()));
        
        proStatusComboBox.setModel(new DefaultComboBoxModel(new String[] { "active", "dormant" }));
        securityStatusComboBox.setModel(new DefaultComboBoxModel(new String[] { "non-prototype", "prototype" }));
        verificationStatusComboBox.setModel(new DefaultComboBoxModel(new String[] { "verified", "unverified", "shipped", "flagged" }));
        storageStatusComboBox.setModel(new DefaultComboBoxModel(new String[] { "checked in", "checked out" }));
        
        
        gridTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Inventory ID", "Create Time", "SN", "RADAR","Vendor",""
            }
        ));
//        gridTable.setModel((DefaultTableModel)main.client.getInvCheckTM("In"));
        gridTable.setRowHeight(25);
        gridTable.setGridColor(Color.DARK_GRAY);
        Action checkIn = new AbstractAction() {

            @Override
            public void actionPerformed(ActionEvent e) {
                JTable table = (JTable)e.getSource();
                int modelRow = Integer.valueOf( e.getActionCommand() );
                String id = table.getModel().getValueAt(modelRow, 0).toString();   
                ((DefaultTableModel)table.getModel()).removeRow(modelRow);
                InvInfo inv = (InvInfo)HibernateUtil.findById(InvInfo.class, id);
                inv.setVerificationStatus("verified");
                HibernateUtil.update(inv);
                MainForm.gridTable.setModel(init.main.client.getInvInfoTM(0));
            }
        };
        ButtonColumn buttonColumn = new ButtonColumn(gridTable, checkIn, gridTable.getColumnCount()-1);
        buttonColumn.setMnemonic(KeyEvent.VK_D);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        gridTable = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        projectNoText = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        InvNumText = new javax.swing.JTextField();
        AddMultiButton = new javax.swing.JToggleButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        storageIDComboBox = new javax.swing.JComboBox();
        jLabel24 = new javax.swing.JLabel();
        proStatusComboBox = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        securityStatusComboBox = new javax.swing.JComboBox();
        jLabel22 = new javax.swing.JLabel();
        verificationStatusComboBox = new javax.swing.JComboBox();
        jLabel21 = new javax.swing.JLabel();
        storageStatusComboBox = new javax.swing.JComboBox();
        jLabel18 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        createEngComboBox = new javax.swing.JComboBox();
        jLabel19 = new javax.swing.JLabel();
        checkinEngComboBox = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        isleIDComboBox = new javax.swing.JTextField();
//        isleIDComboBox = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        checkinTimePicker = new org.jdesktop.swingx.JXDatePicker();
        managerTextField = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        addBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        gridTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(gridTable);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel2.setText("Project Number");

        projectNoText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                projectNoTextActionPerformed(evt);
            }
        });

        jLabel3.setText("Number of Inventories");

        InvNumText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InvNumTextActionPerformed(evt);
            }
        });

        AddMultiButton.setText("Add Multi-Inv");
        AddMultiButton.addActionListener(new java.awt.event.ActionListener() {
          public void actionPerformed(java.awt.event.ActionEvent evt) {
            AddMultiButtonActionPerformed(evt);
          }
        });
        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(projectNoText)
                .addGap(18, 18, 18)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(InvNumText)
                .addGap(166, 166, 166)
                .addComponent(AddMultiButton)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(projectNoText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(InvNumText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AddMultiButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel23.setText("Locker");

        jLabel24.setText("Project Status");

        jLabel15.setText("Security Status");

        jLabel22.setText("Verification Status");

        jLabel21.setText("Storage Status");

        storageStatusComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                storageStatusComboBoxActionPerformed(evt);
            }
        });

        jLabel18.setText("Project Manager");

        jLabel17.setText("Create Engineer");

        jLabel19.setText("Checkin Engineer");

        jLabel9.setText("ISle ID");

        jLabel6.setText("Check In Time");

        checkinTimePicker.setPreferredSize(new java.awt.Dimension(160, 28));

        managerTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                managerTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24)
                    .addComponent(jLabel21)
                    .addComponent(jLabel17)
                    .addComponent(jLabel9))
                .addGap(39, 39, 39)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(createEngComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 210, Short.MAX_VALUE)
                    .addComponent(storageStatusComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(proStatusComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(storageIDComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(isleIDComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addComponent(jLabel6)
                    .addComponent(jLabel18)
                    .addComponent(jLabel15)
                    .addComponent(jLabel22))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(verificationStatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(securityStatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(managerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(checkinEngComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(checkinTimePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {checkinEngComboBox, checkinTimePicker, createEngComboBox, isleIDComboBox, managerTextField, proStatusComboBox, securityStatusComboBox, storageIDComboBox, storageStatusComboBox, verificationStatusComboBox});

        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel23)
                    .addComponent(storageIDComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(securityStatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel24)
                    .addComponent(proStatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22)
                    .addComponent(verificationStatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel21)
                    .addComponent(storageStatusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(managerTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(createEngComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkinEngComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel9)
                    .addComponent(isleIDComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(checkinTimePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel4.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(addBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                .addGap(430, 430, 430)
                .addComponent(cancelBtn, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                .addGap(87, 87, 87))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(addBtn)
                    .addComponent(cancelBtn))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>                        

    private void projectNoTextActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
    }                                             

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {    
      if (InvNumText.getText().equals(""))
        return;
      if(Integer.parseInt(InvNumText.getText())<0)
        return;
      Object[] options = { "Yes", "No" };
      int response = JOptionPane.showOptionDialog(AddBatchInvForm.this, "Are you sure you want to add "+InvNumText.getText()+" the items?", "Warning", JOptionPane.YES_OPTION, JOptionPane.PLAIN_MESSAGE, null, options, options[0]);
      if (response == 1) {
        return;
      }if (response == 0) {
        for (int i = 0; i < Integer.parseInt(InvNumText.getText()); i++) {
          InvInfo inv = new InvInfo();
          String id = gridTable.getModel().getValueAt(i, 0).toString();
          inv.setInvID(id);
          inv.setProjectNum(projectNoText.getText());
          inv.setProjectManageID(managerTextField.getText());
//          inv.setProjectManageID(userlist.get(managerComboBox.getSelectedIndex() - 1).getUserID());

//          inv.setClientProductNum(clientProNoText.getText());
          inv.setCreatEngID(creatorMap.get(createEngComboBox.getSelectedItem()).toString());
          String dateStr = gridTable.getModel().getValueAt(i, 1).toString();
          DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
          Date date = null;
          try {
            date = df.parse(dateStr);
            inv.setCreatTime(date);
          } catch (Exception e) {
          }
          if (storageStatusComboBox.getSelectedItem().toString().equals("checked in")) {
            inv.setStorageStatus("checked in");
            inv.setCheckInEngID(creatorMap.get(checkinEngComboBox.getSelectedItem()).toString());
            inv.setStorageID(lockerMap.get(storageIDComboBox.getSelectedItem()).toString());
            inv.setCheckOutEngID("");
            try {
              date = df.parse(dateStr);
              inv.setCheckInTime(date);
            } catch (Exception e) {
            }
          } else {
            inv.setStorageStatus("checked out");
            inv.setCheckOutEngID(creatorMap.get(checkinEngComboBox.getSelectedItem()).toString());
            inv.setStorageID("");
            inv.setCheckInEngID("");
            try {
              date = df.parse(dateStr);
              inv.setCheckOutTime(date);
            } catch (Exception e) {
            }
          }
          

          inv.setISleID(isleIDComboBox.getText().toString());
          String sn = gridTable.getModel().getValueAt(i, 2).toString();
          inv.setClientProductNum(sn);
          String radar = gridTable.getModel().getValueAt(i, 3).toString();
          inv.setRADAR(radar);
//          inv.setConfigNum(configNoText.getTex     t());
          String vendor = gridTable.getModel().getValueAt(i, 4).toString();
          inv.setVendor(vendor);
          inv.setProjectStatus(proStatusComboBox.getSelectedItem().toString());
          inv.setSecurityStatus(securityStatusComboBox.getSelectedItem().toString());
          inv.setVerificationStatus(verificationStatusComboBox.getSelectedItem().toString());

          HibernateUtil.add(inv);
        }
        MainForm.gridTable.setModel(init.main.client.getInvInfoTM(0));
        JOptionPane.showMessageDialog(AddBatchInvForm.this, "Add "+InvNumText.getText()+" items successfully!", "Add Multiple items", JOptionPane.INFORMATION_MESSAGE);
        
      }
    }                                      

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {                                          
        // TODO add your handling code here:
        this.dispose();
    }    
    
    private String getInvID(){
      while (true) {
        int a[] = new int[13];
        a[0] = 8;
        a[1] = 0;
        for (int i = 0; i < 10; i++)
          a[i + 2] = (int) (10 * (Math.random()));

        String newid = new String("");
        for (int i = 0; i < 12; i++)
          newid += a[i];

        int odd = a[0] + a[2] + a[4] + a[6] + a[8] + a[10];
        int even = a[1] + a[3] + a[5] + a[7] + a[9] + a[11];
        if ((10 - (odd + even * 3) % 10) == 10)
          newid += 0;
        else
          newid += 10 - (odd + even * 3) % 10;
        InvInfo inv = (InvInfo) HibernateUtil.findById(InvInfo.class, newid);
        if (inv == null) {
          return newid;
        }
      }
    }
    
    private void AddMultiButtonActionPerformed(java.awt.event.ActionEvent evt) {                                          
      // TODO add your handling code here:
      if(InvNumText.getText().equals("")){
        return;
      }
      if(Integer.parseInt(InvNumText.getText())<0){
        return;
      }
      int num = Integer.parseInt(InvNumText.getText());
      Object[][] obj = new Object[num][6];
      Date now = new Date();
      DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
      for (Object[] items : obj) {
        items[0] = getInvID();
        items[1] = df.format(now);
        items[2] = "";
        items[3] = "";
        items[4] = "";
        items[5] = "Print";
      }
      gridTable.setModel(new javax.swing.table.DefaultTableModel(
          obj,
          new String [] {
              "Inventory ID", "Create Time", "SN", "RADAR","Vendor",""
          }
      ));
      
      gridTable.setRowHeight(25);
      gridTable.setGridColor(Color.DARK_GRAY);
//      this.setAlwaysOnTop(false);
      Action checkIn = new AbstractAction() {

        @Override
        public void actionPerformed(ActionEvent e) {
            JTable table = (JTable)e.getSource();
            int modelRow = Integer.valueOf( e.getActionCommand() );
            String id = table.getModel().getValueAt(modelRow, 0).toString();   
            String SN = table.getModel().getValueAt(modelRow, 2).toString();   
            byte[] imageByte = Label.creatInvLabel(id.substring(0, 12), id, "Inventory", "ProNo. "+projectNoText.getText(),"SN: "+SN);
            Icon icon = new ImageIcon(imageByte);
            Object[] options = { "Yes", "No" };
            int response = JOptionPane.showOptionDialog(AddBatchInvForm.this, "Are you sure you want to print the tag?", "Warning", JOptionPane.YES_OPTION, JOptionPane.PLAIN_MESSAGE, icon, options, options[0]);
            if (response == 1) {
              return;
            }if (response == 0) {
              File printFile = Label.generateFinalImage("barcode-last.png",imageByte);
              if (printFile == null)
                return;
              PrintImage pi = new PrintImage();
              pi.print("barcode-last.png", 1);
            }
        }
    };
    ButtonColumn buttonColumn = new ButtonColumn(gridTable, checkIn, gridTable.getColumnCount()-1);
    buttonColumn.setMnemonic(KeyEvent.VK_D);

    }                                         

    private void InvNumTextActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
    }                                              

    private void storageStatusComboBoxActionPerformed(java.awt.event.ActionEvent evt) {                                                      
        // TODO add your handling code here:
    }                                                     

    private void managerTextFieldActionPerformed(java.awt.event.ActionEvent evt) {                                                 
        // TODO add your handling code here:
    }                                                

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddBatchInvForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddBatchInvForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddBatchInvForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddBatchInvForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddBatchInvForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JToggleButton AddMultiButton;
    private javax.swing.JButton addBtn;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JComboBox checkinEngComboBox;
    private org.jdesktop.swingx.JXDatePicker checkinTimePicker;
    private javax.swing.JComboBox createEngComboBox;
    private javax.swing.JTextField isleIDComboBox;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable gridTable;
    private javax.swing.JTextField managerTextField;
    private javax.swing.JComboBox proStatusComboBox;
    private javax.swing.JTextField projectNoText;
    private javax.swing.JTextField InvNumText;
    private javax.swing.JComboBox securityStatusComboBox;
    private javax.swing.JComboBox storageIDComboBox;
    private javax.swing.JComboBox storageStatusComboBox;
    private javax.swing.JComboBox verificationStatusComboBox;
    private Map creatorMap = new HashMap();
    private Map lockerMap = new HashMap();
    private Map isleMap = new HashMap();
    // End of variables declaration                   
}
