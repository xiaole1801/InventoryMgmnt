/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ui;

import java.awt.event.KeyEvent;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListModel;

import models.InvInfo;
import models.OSle;
import db.HibernateUtil;

/**
 *
 * @author zhangle
 */
public class ShipOutForm extends javax.swing.JFrame {

    /**
   * 
   */
  private List<String> invList = new ArrayList<String>();
  private static final long serialVersionUID = -4835267880428039536L;
    /**
     * Creates new form CheckInFrom
     */
    public ShipOutForm() {
        initComponents();
        generateOsleID();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

      headPanel = new javax.swing.JPanel();
      scanTextField = new javax.swing.JTextField();
      jLabel1 = new javax.swing.JLabel();
      bottomPanel = new javax.swing.JPanel();
      jScrollPane1 = new javax.swing.JScrollPane();
      SannerList = new javax.swing.JList();
      headPanel2 = new javax.swing.JPanel();
      delBtn = new javax.swing.JButton();
      okBtn1 = new javax.swing.JButton();
      headPanel3 = new javax.swing.JPanel();
      ShipOutTextField = new javax.swing.JTextField();
      jLabel4 = new javax.swing.JLabel();

      setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

      headPanel.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

      scanTextField.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
      scanTextField.setForeground(new java.awt.Color(0, 51, 153));
      scanTextField.addKeyListener(new java.awt.event.KeyAdapter() {
          public void keyTyped(java.awt.event.KeyEvent evt) {
              scanTextFieldKeyTyped(evt);
          }
          public void keyPressed(java.awt.event.KeyEvent evt) {
            scanTextFieldKeyPressed(evt);
          }
      });

      jLabel1.setText("Invenory ID");

      javax.swing.GroupLayout headPanelLayout = new javax.swing.GroupLayout(headPanel);
      headPanel.setLayout(headPanelLayout);
      headPanelLayout.setHorizontalGroup(
          headPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(headPanelLayout.createSequentialGroup()
              .addGap(17, 17, 17)
              .addComponent(jLabel1)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
              .addComponent(scanTextField)
              .addGap(17, 17, 17))
      );
      headPanelLayout.setVerticalGroup(
          headPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(headPanelLayout.createSequentialGroup()
              .addContainerGap()
              .addComponent(scanTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 57, Short.MAX_VALUE)
              .addContainerGap())
          .addGroup(headPanelLayout.createSequentialGroup()
              .addGap(21, 21, 21)
              .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
      );

      bottomPanel.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

      jScrollPane1.setViewportView(SannerList);

      javax.swing.GroupLayout bottomPanelLayout = new javax.swing.GroupLayout(bottomPanel);
      bottomPanel.setLayout(bottomPanelLayout);
      bottomPanelLayout.setHorizontalGroup(
          bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(bottomPanelLayout.createSequentialGroup()
              .addContainerGap()
              .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
              .addContainerGap())
      );
      bottomPanelLayout.setVerticalGroup(
          bottomPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(bottomPanelLayout.createSequentialGroup()
              .addContainerGap()
              .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
              .addContainerGap())
      );

      headPanel2.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

      delBtn.setText("Delete");
      delBtn.addActionListener(new java.awt.event.ActionListener() {
          public void actionPerformed(java.awt.event.ActionEvent evt) {
              delBtnActionPerformed(evt);
          }
      });

      okBtn1.setText("Ship Out");
      okBtn1.addActionListener(new java.awt.event.ActionListener() {
          public void actionPerformed(java.awt.event.ActionEvent evt) {
              okBtnActionPerformed(evt);
          }
      });

      javax.swing.GroupLayout headPanel2Layout = new javax.swing.GroupLayout(headPanel2);
      headPanel2.setLayout(headPanel2Layout);
      headPanel2Layout.setHorizontalGroup(
          headPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(headPanel2Layout.createSequentialGroup()
              .addGap(24, 24, 24)
              .addComponent(delBtn)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
              .addComponent(okBtn1)
              .addGap(28, 28, 28))
      );
      headPanel2Layout.setVerticalGroup(
          headPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(headPanel2Layout.createSequentialGroup()
              .addGap(15, 15, 15)
              .addGroup(headPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                  .addComponent(okBtn1)
                  .addComponent(delBtn))
              .addContainerGap(14, Short.MAX_VALUE))
      );

      headPanel3.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED)));

      ShipOutTextField.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
      ShipOutTextField.setForeground(new java.awt.Color(0, 51, 153));
      ShipOutTextField.addKeyListener(new java.awt.event.KeyAdapter() {
          public void keyTyped(java.awt.event.KeyEvent evt) {
              ShipOutTextFieldKeyTyped(evt);
          }
          public void keyPressed(java.awt.event.KeyEvent evt) {
            shipOutTextFieldKeyPressed(evt);
          }
      });

      jLabel4.setText("Shipping Out ID");

      javax.swing.GroupLayout headPanel3Layout = new javax.swing.GroupLayout(headPanel3);
      headPanel3.setLayout(headPanel3Layout);
      headPanel3Layout.setHorizontalGroup(
          headPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(headPanel3Layout.createSequentialGroup()
              .addGap(17, 17, 17)
              .addComponent(jLabel4)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
              .addComponent(ShipOutTextField)
              .addGap(17, 17, 17))
      );
      headPanel3Layout.setVerticalGroup(
          headPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(headPanel3Layout.createSequentialGroup()
              .addContainerGap()
              .addComponent(ShipOutTextField)
              .addContainerGap())
          .addGroup(headPanel3Layout.createSequentialGroup()
              .addGap(21, 21, 21)
              .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addContainerGap(18, Short.MAX_VALUE))
      );

      javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
      getContentPane().setLayout(layout);
      layout.setHorizontalGroup(
          layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(headPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(bottomPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(headPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addComponent(headPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
      );
      layout.setVerticalGroup(
          layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
              .addComponent(headPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
              .addComponent(bottomPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
              .addComponent(headPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
              .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
              .addComponent(headPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
      );

      pack();
  }// </editor-fold>                        

    private void okBtnActionPerformed(java.awt.event.ActionEvent evt) {  
      invList.clear();
      Object[] options = {"Yes"};
      if (ShipOutTextField.getText().equals("") || (SannerList.getModel().getSize() == 0)){
        JOptionPane.showOptionDialog ( ShipOutForm.this, "Please input or scan the Inventory ID","Warning",JOptionPane.YES_OPTION ,JOptionPane.PLAIN_MESSAGE,null, options, options[0] ) ;
          return;
      }
      options = new Object[]{"Yes","No"};
      int response=JOptionPane.showOptionDialog ( ShipOutForm.this, "Are you sure you want to ship out all the items?","Warning",JOptionPane.YES_OPTION ,JOptionPane.PLAIN_MESSAGE,null, options, options[0] ) ;
      if (response == 1){
        return;
      }
      Date date = new Date();
      for (int i = 0; i < SannerList.getModel().getSize(); i++) {
        InvInfo inv = (InvInfo) HibernateUtil.findById(InvInfo.class, SannerList.getModel().getElementAt(i).toString());
        if (inv != null){
//          inv.setCheckInEngID(init.main.client.getUserID());
//          inv.setCheckInTime(date);
//          inv.setStorageID(ShipOutTextField.getText());
//          inv.setStorageStatus("checked in");
          inv.setOSleID(ShipOutTextField.getText());
          inv.setVerificationStatus("shipped");
          HibernateUtil.update(inv);
        }else{
          invList.add(SannerList.getModel().getElementAt(i).toString());
        }
      }
      MainForm.gridTable.setModel(init.main.client.getInvInfoTM(0));
      String showStr = "";
      if (invList.size()>0){
        for (int i = 0; i < invList.size(); i++) {
          showStr = showStr+invList.get(i)+"\n";
        }
      }
      options = new Object[]{"Close"};
      JOptionPane.showOptionDialog ( ShipOutForm.this, showStr+"These items don't exist!","Warning",JOptionPane.YES_OPTION ,JOptionPane.PLAIN_MESSAGE,null, options, options[0] ) ;
      if (response == 1){
        
        return;
      }
      ShipOutTextField.setText("");
      lm.clear();
      SannerList.setModel(lm);
      SannerList.updateUI();
    }                                     

    private void delBtnActionPerformed(java.awt.event.ActionEvent evt) {                                       
      Object[] options = {"Yes","No"};
      int response=JOptionPane.showOptionDialog ( ShipOutForm.this, "Are you sure you want to delete all seleted items?","Warning",JOptionPane.YES_OPTION ,JOptionPane.PLAIN_MESSAGE,null, options, options[0] ) ;
      if (response == 1){
        return;
      }
      if(lm.getSize() == 0)
            return;
        System.out.println(SannerList.getSelectedIndices().length);
        int count = SannerList.getSelectedIndices().length;
        int[] indexArray = SannerList.getSelectedIndices();
        for(int i = 0; i< count; i++){
            
            lm.remove(SannerList.getSelectedIndex());
        }
        
        SannerList.updateUI();
    }                                      

    private void scanTextFieldKeyTyped(java.awt.event.KeyEvent evt) {                                       
        // TODO add your handling code here:
        if (scanTextField.getText().length() >= 13){
//            scanTextField.setText(scanTextField.getText()+"\r\n"+scanTextField.getText());
//            scanTextField.setText("");
            lm.addElement(scanTextField.getText());
            scanTextField.setText("");
            SannerList.setModel(lm);
        }
    }                                      

  private void scanTextFieldKeyPressed(java.awt.event.KeyEvent evt) {
    // TODO add your handling code here:
    if (  evt.getKeyCode() == KeyEvent.VK_SPACE) {
      ShipOutTextField.requestFocus();
    }
  }

  private void shipOutTextFieldKeyPressed(java.awt.event.KeyEvent evt) {
    // TODO add your handling code here:
    if ( evt.getKeyCode() == KeyEvent.VK_SPACE) {
      scanTextField.requestFocus();
    }
  }

    private void ShipOutTextFieldKeyTyped(KeyEvent evt) {
      // TODO Auto-generated method stub
      
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ShipOutForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ShipOutForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ShipOutForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ShipOutForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ShipOutForm().setVisible(true);
            }
        });
    }

    
    private void generateOsleID() {
      // TODO Auto-generated method stub
      while (true)
      {
        int a[] = new int[13];
        a[0]=2;
        a[1]=0;
        for(int i=0;i<10;i++)
          a[i+2] = (int)(10*(Math.random()));
        
        String newid = new String("");
        for(int i=0;i<12;i++)
          newid += a[i];

        int odd = a[0]+a[2]+a[4]+a[6]+a[8]+a[10];
        int even= a[1]+a[3]+a[5]+a[7]+a[9]+a[11];
        if ((10-(odd + even*3)%10)==10)
          newid+=0;
        else
          newid+= 10-(odd + even*3)%10;
        OSle inv = (OSle)HibernateUtil.findById(OSle.class, newid);
          if (inv==null) 
          {
            ShipOutTextField.setText(newid);
            ShipOutTextField.setEnabled(false);
            break;
          }
      } 
    }
    
    // Variables declaration - do not modify                     
    private javax.swing.JList SannerList;
    private javax.swing.JPanel bottomPanel;
    private javax.swing.JButton delBtn;
    private javax.swing.JPanel headPanel;
    private javax.swing.JPanel headPanel2;
    private javax.swing.JPanel headPanel3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField ShipOutTextField;
    private javax.swing.JButton okBtn1;
    private javax.swing.JTextField scanTextField;
    // End of variables declaration                   
    private  DefaultListModel lm = new DefaultListModel();
}

